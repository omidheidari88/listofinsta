{"ast":null,"code":"var _jsxFileName = \"/Users/omid/Documents/GitHub/listofinsta/loi-front/src/Partials/Table/THead.jsx\";\nimport React from 'react';\n\nconst Header = ({\n  data\n}) => {\n  const clickableItem = () => {\n    console.log(data);\n  };\n\n  const rows = Object.keys(data).map(item => {\n    return 'clickable' in data[item] && data[item].clickable ? /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => clickableItem(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 62\n      }\n    }, data[item].title) : /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 124\n      }\n    }, data[item].title);\n  });\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, rows);\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/omid/Documents/GitHub/listofinsta/loi-front/src/Partials/Table/THead.jsx"],"names":["React","Header","data","clickableItem","console","log","rows","Object","keys","map","item","clickable","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC1B,QAAMC,aAAa,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,GAFD;;AAGA,QAAMI,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,GAAlB,CAAuBC,IAAD,IAAU;AAC5C,WAAO,eAAeR,IAAI,CAACQ,IAAD,CAAnB,IAA6BR,IAAI,CAACQ,IAAD,CAAJ,CAAWC,SAAxC,gBAAoD;AAAI,MAAA,OAAO,EAAE,MAAMR,aAAa,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCD,IAAI,CAACQ,IAAD,CAAJ,CAAWE,KAAhD,CAApD,gBAAkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,IAAI,CAACQ,IAAD,CAAJ,CAAWE,KAAhB,CAAzH;AACA,GAFY,CAAb;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQN,IAAR,CAAP;AACA,CARD;;AAUA,eAAeL,MAAf","sourcesContent":["import React from 'react';\n\nconst Header = ({data}) => {\n\tconst clickableItem = () => {\n\t\tconsole.log(data);\n\t};\n\tconst rows = Object.keys(data).map((item) => {\n\t\treturn 'clickable' in data[item] && data[item].clickable ? <th onClick={() => clickableItem()}>{data[item].title}</th> : <th>{data[item].title}</th>;\n\t});\n\treturn <thead>{rows}</thead>;\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}