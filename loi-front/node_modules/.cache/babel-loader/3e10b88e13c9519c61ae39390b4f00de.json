{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport Axios from '../../Ajax/Axios';\nimport { actions } from '../actions';\nconst axios = new Axios();\n\nfunction* fetchUserWorker(action) {\n  console.log(action);\n\n  try {\n    console.log(action);\n    const users = yield call(() => axios.get('user/add').then(res => res.data.items));\n    yield put({\n      type: actions.FETCH_USER_SUCCESS,\n      payload: users\n    });\n    console.log(users);\n  } catch (error) {\n    yield put({\n      type: actions.FETCH_USER_FAILED,\n      payload: {\n        messages: error.message\n      }\n    });\n  }\n}\n\nexport function* fetchUserWatcher() {\n  yield takeEvery(actions.FETCH_USER, console.log('hi'));\n}","map":{"version":3,"sources":["/Users/omid/Documents/GitHub/listofinsta/loi-front/src/modules/store/saga.js"],"names":["takeEvery","put","call","Axios","actions","axios","fetchUserWorker","action","console","log","users","get","then","res","data","items","type","FETCH_USER_SUCCESS","payload","error","FETCH_USER_FAILED","messages","message","fetchUserWatcher","FETCH_USER"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,MAAMC,KAAK,GAAG,IAAIF,KAAJ,EAAd;;AACA,UAAUG,eAAV,CAA0BC,MAA1B,EAAkC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAI;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,KAAK,GAAG,MAAMR,IAAI,CAAC,MAAMG,KAAK,CAACM,GAAN,CAAU,UAAV,EAAsBC,IAAtB,CAA4BC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASC,KAA7C,CAAP,CAAxB;AACA,UAAMd,GAAG,CAAC;AAACe,MAAAA,IAAI,EAAEZ,OAAO,CAACa,kBAAf;AAAmCC,MAAAA,OAAO,EAAER;AAA5C,KAAD,CAAT;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,GALD,CAKE,OAAOS,KAAP,EAAc;AACf,UAAMlB,GAAG,CAAC;AAACe,MAAAA,IAAI,EAAEZ,OAAO,CAACgB,iBAAf;AAAkCF,MAAAA,OAAO,EAAE;AAACG,QAAAA,QAAQ,EAAEF,KAAK,CAACG;AAAjB;AAA3C,KAAD,CAAT;AACA;AACD;;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,QAAMvB,SAAS,CAACI,OAAO,CAACoB,UAAT,EAAqBhB,OAAO,CAACC,GAAR,CAAY,IAAZ,CAArB,CAAf;AACA","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\nimport Axios from '../../Ajax/Axios';\nimport {actions} from '../actions';\nconst axios = new Axios();\nfunction* fetchUserWorker(action) {\n\tconsole.log(action);\n\ttry {\n\t\tconsole.log(action);\n\t\tconst users = yield call(() => axios.get('user/add').then((res) => res.data.items));\n\t\tyield put({type: actions.FETCH_USER_SUCCESS, payload: users});\n\t\tconsole.log(users);\n\t} catch (error) {\n\t\tyield put({type: actions.FETCH_USER_FAILED, payload: {messages: error.message}});\n\t}\n}\n\nexport function* fetchUserWatcher() {\n\tyield takeEvery(actions.FETCH_USER, console.log('hi'));\n}\n"]},"metadata":{},"sourceType":"module"}