{"ast":null,"code":"export const initialState = {\n  users: []\n};\nexport const reducer = (state = initialState, action) => {\n  let result = state;\n  console.log(action.payload);\n  console.log(state.users);\n\n  switch (action.type) {\n    case 'add':\n      result = { ...state,\n        users: [...state.users, action.payload]\n      };\n      break;\n\n    default:\n      result = state;\n      break;\n  }\n\n  return result;\n}; //NOTE multi state & multi reducer\n// export const initialState = {\n// \tusers: {items: []},\n// \tproducts: {items: []},\n// \tcourses: {items: []},\n// };\n// export const reducer = ({users, products, courses}, action) => {\n// \treturn {\n// \t\tusers: userReducer(users, action),\n// \t\tproducts: productReducer(products, action),\n// \t\tcourses: courseReducer(courses, action),\n// \t};\n// };","map":{"version":3,"sources":["/Users/omid/Documents/GitHub/listofinsta/loi-front/src/modules/store/reducer.js"],"names":["initialState","users","reducer","state","action","result","console","log","payload","type"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAArB;AACP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACxD,MAAIC,MAAM,GAAGF,KAAb;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACF,KAAlB;;AACA,UAAQG,MAAM,CAACK,IAAf;AACC,SAAK,KAAL;AACCJ,MAAAA,MAAM,GAAG,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACI,OAAxB;AAAlB,OAAT;AACA;;AACD;AACCH,MAAAA,MAAM,GAAGF,KAAT;AACA;AANF;;AAQA,SAAOE,MAAP;AACA,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const initialState = {users: []};\nexport const reducer = (state = initialState, action) => {\n\tlet result = state;\n\tconsole.log(action.payload);\n\tconsole.log(state.users);\n\tswitch (action.type) {\n\t\tcase 'add':\n\t\t\tresult = {...state, users: [...state.users, action.payload]};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tresult = state;\n\t\t\tbreak;\n\t}\n\treturn result;\n};\n\n//NOTE multi state & multi reducer\n// export const initialState = {\n// \tusers: {items: []},\n// \tproducts: {items: []},\n// \tcourses: {items: []},\n// };\n\n// export const reducer = ({users, products, courses}, action) => {\n// \treturn {\n// \t\tusers: userReducer(users, action),\n// \t\tproducts: productReducer(products, action),\n// \t\tcourses: courseReducer(courses, action),\n// \t};\n// };\n"]},"metadata":{},"sourceType":"module"}