{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport Axios from '../../../Ajax/Axios';\nimport { actions } from '../actions';\nconst axios = new Axios();\n\nfunction* fetchUserWorker(action) {\n  try {\n    const users = yield call(() => axios.get('user/add').then(res => res.data.items));\n    yield put({\n      type: actions.FETCH_USER_SUCCESS,\n      payload: {\n        users: users,\n        messages: 'sentiment_satisfied_alt'\n      }\n    });\n  } catch (error) {\n    yield put({\n      type: actions.FETCH_USER_FAILED,\n      payload: {\n        messages: error.message\n      }\n    });\n  }\n}\n\nexport function* fetchUserWatcher() {\n  yield takeEvery(actions.FETCH_USER, fetchUserWorker);\n}","map":{"version":3,"sources":["/Users/omid/Documents/GitHub/listofinsta/loi-front/src/modules/store/saga/saga.js"],"names":["takeEvery","put","call","Axios","actions","axios","fetchUserWorker","action","users","get","then","res","data","items","type","FETCH_USER_SUCCESS","payload","messages","error","FETCH_USER_FAILED","message","fetchUserWatcher","FETCH_USER"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,MAAMC,KAAK,GAAG,IAAIF,KAAJ,EAAd;;AACA,UAAUG,eAAV,CAA0BC,MAA1B,EAAkC;AACjC,MAAI;AACH,UAAMC,KAAK,GAAG,MAAMN,IAAI,CAAC,MAAMG,KAAK,CAACI,GAAN,CAAU,UAAV,EAAsBC,IAAtB,CAA4BC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASC,KAA7C,CAAP,CAAxB;AACA,UAAMZ,GAAG,CAAC;AAACa,MAAAA,IAAI,EAAEV,OAAO,CAACW,kBAAf;AAAmCC,MAAAA,OAAO,EAAE;AAACR,QAAAA,KAAK,EAAEA,KAAR;AAAeS,QAAAA,QAAQ,EAAE;AAAzB;AAA5C,KAAD,CAAT;AACA,GAHD,CAGE,OAAOC,KAAP,EAAc;AACf,UAAMjB,GAAG,CAAC;AAACa,MAAAA,IAAI,EAAEV,OAAO,CAACe,iBAAf;AAAkCH,MAAAA,OAAO,EAAE;AAACC,QAAAA,QAAQ,EAAEC,KAAK,CAACE;AAAjB;AAA3C,KAAD,CAAT;AACA;AACD;;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC,QAAMrB,SAAS,CAACI,OAAO,CAACkB,UAAT,EAAqBhB,eAArB,CAAf;AACA","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects';\nimport Axios from '../../../Ajax/Axios';\nimport {actions} from '../actions';\nconst axios = new Axios();\nfunction* fetchUserWorker(action) {\n\ttry {\n\t\tconst users = yield call(() => axios.get('user/add').then((res) => res.data.items));\n\t\tyield put({type: actions.FETCH_USER_SUCCESS, payload: {users: users, messages: 'sentiment_satisfied_alt'}});\n\t} catch (error) {\n\t\tyield put({type: actions.FETCH_USER_FAILED, payload: {messages: error.message}});\n\t}\n}\n\nexport function* fetchUserWatcher() {\n\tyield takeEvery(actions.FETCH_USER, fetchUserWorker);\n}\n"]},"metadata":{},"sourceType":"module"}