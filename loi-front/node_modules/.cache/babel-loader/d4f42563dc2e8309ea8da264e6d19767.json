{"ast":null,"code":"const products = localStorage.getItem('product');\nconst product = JSON.parse(products);\nexport let initialState = {\n  items: []\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'add':\n      addHandler(state, action);\n      break;\n\n    default:\n      break;\n  }\n\n  return getStateFromLocalStorage(initialState, product);\n};\n\nconst getStateFromLocalStorage = (newState, data) => {\n  return initialState = [...newState.items, data];\n};\n\nconst addHandler = (state, action) => {\n  return { ...state,\n    items: [...state.items, action.payload]\n  };\n};","map":{"version":3,"sources":["/Users/omid/Documents/GitHub/listofinsta/loi-front/src/modules/store/reducer.js"],"names":["products","localStorage","getItem","product","JSON","parse","initialState","items","reducer","state","action","type","addHandler","getStateFromLocalStorage","newState","data","payload"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAjB;AACA,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAhB;AACA,OAAO,IAAIM,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAAnB;AACP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,KAAL;AACCC,MAAAA,UAAU,CAACH,KAAD,EAAQC,MAAR,CAAV;AACA;;AACD;AACC;AALF;;AAOA,SAAOG,wBAAwB,CAACP,YAAD,EAAeH,OAAf,CAA/B;AACA,CATM;;AAUP,MAAMU,wBAAwB,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AACpD,SAAQT,YAAY,GAAG,CAAC,GAAGQ,QAAQ,CAACP,KAAb,EAAoBQ,IAApB,CAAvB;AACA,CAFD;;AAGA,MAAMH,UAAU,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAO,EAAC,GAAGD,KAAJ;AAAWF,IAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACM,OAAxB;AAAlB,GAAP;AACA,CAFD","sourcesContent":["const products = localStorage.getItem('product');\nconst product = JSON.parse(products);\nexport let initialState = {items: []};\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'add':\n\t\t\taddHandler(state, action);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn getStateFromLocalStorage(initialState, product);\n};\nconst getStateFromLocalStorage = (newState, data) => {\n\treturn (initialState = [...newState.items, data]);\n};\nconst addHandler = (state, action) => {\n\treturn {...state, items: [...state.items, action.payload]};\n};\n"]},"metadata":{},"sourceType":"module"}