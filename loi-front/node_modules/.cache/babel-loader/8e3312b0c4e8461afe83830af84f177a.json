{"ast":null,"code":"var _jsxFileName = \"/Users/omid/Documents/GitHub/listofinsta/loi-front/src/modules/User/Users.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { UserContext } from '../store/ContextManager';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport Filter from '../../Partials/Filter';\nimport FilterSign from '../../Partials/Filter/FilterSign';\nimport TableWithCash from '../HOC/TableWithCash';\nimport { actions } from '../actions';\n\nconst Users = props => {\n  const {\n    history,\n    location,\n    userState,\n    addUser\n  } = props;\n  const query = new URLSearchParams(location.search);\n  const [users, setUsers] = useState([]);\n  const [type, setType] = useState('id');\n  const [theme, setTheme] = useState('dark');\n  const [showFilter, setShowFilter] = useState(false);\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.ir/users`).then(res => res.json()).then(dataFetch => setUsers(dataFetch)); // .finally(() => addUser(users));\n  }, [users.length]);\n  useEffect(() => setUsers(users.sort((a, b) => a[type] > b[type] ? -1 : 1)), [query.get('sort')]);\n\n  const filterHandler = () => {\n    history.push({\n      search: new URLSearchParams({\n        sort: 'acse'\n      }).toString()\n    });\n  };\n\n  const usersData = [{\n    whenClick: () => filterHandler(),\n    tittle: 'ID'\n  }, {\n    whenClick: () => setShowFilter(false),\n    tittle: 'X'\n  }];\n  const userRender = userState.map(data => /*#__PURE__*/React.createElement(User, {\n    data: data,\n    metaData: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 45\n    }\n  }));\n  const UserWithLocalData = TableWithCash(User, props, 'product');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, theme === 'dark' ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setTheme(theme === 'dark' ? 'white' : 'dark'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }, \"toggle_off\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setTheme(theme === 'white' ? 'dark' : 'white'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, \"toggle_on\")), /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      theme\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: () => addUser(users),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Get Users\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover table-striped text-center\",\n    style: {\n      width: '70%',\n      height: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, \"pics\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, \"link\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }, userRender))))));\n};\n\nconst mapState = state => ({\n  userState: state.items\n});\n\nconst mapDispatch = dispatch => {\n  return {\n    addUser: payload => {\n      dispatch({\n        type: 'add',\n        payload\n      });\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Users);","map":{"version":3,"sources":["/Users/omid/Documents/GitHub/listofinsta/loi-front/src/modules/User/Users.jsx"],"names":["React","useState","useEffect","UserContext","connect","User","Filter","FilterSign","TableWithCash","actions","Users","props","history","location","userState","addUser","query","URLSearchParams","search","users","setUsers","type","setType","theme","setTheme","showFilter","setShowFilter","fetch","then","res","json","dataFetch","length","sort","a","b","get","filterHandler","push","toString","usersData","whenClick","tittle","userRender","map","data","UserWithLocalData","width","height","mapState","state","items","mapDispatch","dispatch","payload"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {UserContext} from '../store/ContextManager';\nimport {connect} from 'react-redux';\nimport User from './User';\nimport Filter from '../../Partials/Filter';\nimport FilterSign from '../../Partials/Filter/FilterSign';\nimport TableWithCash from '../HOC/TableWithCash';\nimport {actions} from '../actions';\nconst Users = (props) => {\n\tconst {history, location, userState, addUser} = props;\n\tconst query = new URLSearchParams(location.search);\n\tconst [users, setUsers] = useState([]);\n\tconst [type, setType] = useState('id');\n\tconst [theme, setTheme] = useState('dark');\n\tconst [showFilter, setShowFilter] = useState(false);\n\tuseEffect(() => {\n\t\tfetch(`https://jsonplaceholder.ir/users`)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((dataFetch) => setUsers(dataFetch));\n\t\t// .finally(() => addUser(users));\n\t}, [users.length]);\n\n\tuseEffect(() => setUsers(users.sort((a, b) => (a[type] > b[type] ? -1 : 1))), [query.get('sort')]);\n\tconst filterHandler = () => {\n\t\thistory.push({\n\t\t\tsearch: new URLSearchParams({\n\t\t\t\tsort: 'acse',\n\t\t\t}).toString(),\n\t\t});\n\t};\n\tconst usersData = [\n\t\t{\n\t\t\twhenClick: () => filterHandler(),\n\t\t\ttittle: 'ID',\n\t\t},\n\t\t{\n\t\t\twhenClick: () => setShowFilter(false),\n\t\t\ttittle: 'X',\n\t\t},\n\t];\n\n\tconst userRender = userState.map((data) => <User data={data} metaData={props} />);\n\tconst UserWithLocalData = TableWithCash(User, props, 'product');\n\treturn (\n\t\t<div>\n\t\t\t{theme === 'dark' ? (\n\t\t\t\t<button onClick={() => setTheme(theme === 'dark' ? 'white' : 'dark')}>\n\t\t\t\t\t<i className=\"material-icons\">toggle_off</i>\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<button onClick={() => setTheme(theme === 'white' ? 'dark' : 'white')}>\n\t\t\t\t\t<i className=\"material-icons\">toggle_on</i>\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{/* {showFilter ? <Filter items={usersData} /> : <FilterSign item={() => setShowFilter(true)} />} */}\n\t\t\t<UserContext.Provider value={{theme}}>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={() => addUser(users)}>\n\t\t\t\t\t\t\tGet Users\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<table className=\"table table-bordered table-hover table-striped text-center\" style={{width: '70%', height: '50%'}}>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr className=\"dark\">\n\t\t\t\t\t\t\t\t\t<td>pics</td>\n\t\t\t\t\t\t\t\t\t<td>name</td>\n\t\t\t\t\t\t\t\t\t<td>link</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>{userRender}</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <div className=\"col\">\n\t\t\t\t\t\t<table className=\"table table-bordered table-hover table-striped text-center\" style={{width: '70%', height: '50%'}}>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr className=\"dark\">\n\t\t\t\t\t\t\t\t\t<td>pics</td>\n\t\t\t\t\t\t\t\t\t<td>name</td>\n\t\t\t\t\t\t\t\t\t<td>link</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>{<UserWithLocalData />}</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div> */}\n\t\t\t\t</div>\n\t\t\t</UserContext.Provider>\n\t\t</div>\n\t);\n};\n\nconst mapState = (state) => ({userState: state.items});\n\nconst mapDispatch = (dispatch) => {\n\treturn {\n\t\taddUser: (payload) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'add',\n\t\t\t\tpayload,\n\t\t\t});\n\t\t},\n\t};\n};\n\nexport default connect(mapState, mapDispatch)(Users);\n"]},"metadata":{},"sourceType":"module"}